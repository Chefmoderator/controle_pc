import os
from aiogram import types, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from aiogram.filters.state import StateFilter  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è
from ctypes import cast, POINTER
from comtypes import CLSCTX_ALL
from pycaw.pycaw import AudioUtilities, IAudioEndpointVolume
from bot.State import BotState
from bot.handler import BotState

# –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∑–≤—É–∫–æ–º
device = AudioUtilities.GetSpeakers()
interface = device.Activate(IAudioEndpointVolume._iid_, CLSCTX_ALL, None)
volume = interface.QueryInterface(IAudioEndpointVolume)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é –≥—Ä–æ–º–∫–æ—Å—Ç–∏
async def voleme_menu(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üîä –£–∑–Ω–∞—Ç—å –∑–≤—É–∫ —Å–µ–π—á–∞—Å"),KeyboardButton(text="üîâ –ò–∑–º–µ–Ω–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –∑–≤—É–∫–∞")],
            [KeyboardButton(text="üîä –í–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫"), KeyboardButton(text="üîá –í—ã–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫")],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]
        ],
        resize_keyboard=True
    )
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –≥—Ä–æ–º–∫–æ—Å—Ç—å—é:", reply_markup=keyboard)
# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏

async def get_volume_now(message: types.Message, state: FSMContext):
    current_volume = volume.GetMasterVolumeLevelScalar() * 100
    current_volume = int(current_volume)
    await message.answer(f"üîä –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –≥—Ä–æ–º–∫–æ—Å—Ç–∏: {current_volume}%")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏
async def asking_for_change_volume(message: types.Message, state: FSMContext):
    await message.answer("üîä –ù–∞–ø–∏—à–∏—Ç–µ –∫–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å –∑–≤—É–∫–∞ –≤–∞–º –Ω—É–∂–µ–Ω ")
    await state.set_state(BotState.waiting_for_asking_for_change_volume)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏
async def change_volume(message: types.Message, state: FSMContext):
    try:
        if message.text and int(message.text) < 101 and message.text.isdigit():
            new_volume = int(message.text) / 100
            volume.SetMasterVolumeLevelScalar(new_volume, None)
            await message.answer(f"üîä –£—Ä–æ–≤–µ–Ω—å –∑–≤—É–∫–∞ —Å–µ–π—á–∞: {new_volume * 100}%")
        else:
            await message.answer("‚ùå –û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏.")
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        await state.clear()

#–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∑–≤—É–∫–∞
async def turn_on_the_sound(message:types.Message, state:FSMContext):
    volume.SetMute(False,None)
    await message.answer("üîä –ó–≤—É–∫ –≤–∫–ª—é—á–µ–Ω")

#–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è –∑–≤—É–∫–∞
async def turn_off_the_sound(message:types.Message, state:FSMContext):
    volume.SetMute(True,None)
    await message.answer("üîá –ó–≤—É–∫ –≤—ã–∫–ª—é—á–µ–Ω")

#–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –Ω–∞–∑–∞–¥
# async def volume_back(message:types.Message,state:FSMContext):
#     await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–Ω–∞–¥—É /back , —á—Ç–æ –±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")